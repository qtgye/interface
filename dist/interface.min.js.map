{"version":3,"sources":["interface.js","module.js"],"names":["Interface","name","properties","defaultTypes","TypeError","key","Object","defineProperties","value","push","propertyObject","arrayOrTypeString","type","Array","isArray","defaultValue","indexOf","Error","default","testOnObject","object","testReport","success","errorType","errorMessage","match","report","testPropertiesOf","isImplemented","errors","forEach","error","console","message","bind","prototype","implementOn","constructor","property","isImplementedBy","objectOrConstrutor","every","propTestReport","testAndThrow","testAndGetReport","implements","interfaceInstance","module","window","exports","TestClass"],"mappings":"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","file":"interface.min.js","sourcesContent":["'use strict'\n\n;(function(){\n\t\n\t// Interface Class\n\tvar Interface = function (name, properties) {\n\n\t\t/* Contains default types in Javascript */\n\t\tvar defaultTypes = [ 'string', 'boolean', 'number', 'array', 'object', 'function', 'null', 'undefined' ]\n\n\t\t// Interface must have a name\n\t\tif ( typeof name !== 'string' ) {\n\t\t\tthrow new TypeError('Interface instance requires a name')\n\t\t}\n\n\t\t// \tProperties must be a set of object properties\n\t\tif ( typeof properties !== 'object' ) {\n\t\t\tthrow new TypeError('Interface instance requires a set of object properties')\n\t\t}\n\n\t\t// \tPublic properties\n\t\tObject.defineProperties(this, {\n\t\t\tname : {\n\t\t\t\tvalue : name\n\t\t\t},\n\t\t\tproperties : {\n\t\t\t\tvalue : [] // An array of objects declaring property name and type { name : 'prop1', 'type' : 'number' }\n\t\t\t}\n\t\t})\n\n\t\tfor ( var key in properties ) {\n\t\t\tthis.properties.push((function(){\n\n\t\t\t\tvar propertyObject = {}\n\t\t\t\tvar arrayOrTypeString = properties[key]\n\t\t\t\tvar type = Array.isArray(arrayOrTypeString) ? arrayOrTypeString[0] : arrayOrTypeString\n\t\t\t\tvar defaultValue = Array.isArray(arrayOrTypeString) ? arrayOrTypeString[1] : \n\t\t\t\t\ttype === 'boolean' ? true :\n\t\t\t\t\ttype === 'string' ? '' :\n\t\t\t\t\ttype === 'number' ? 0 :\n\t\t\t\t\ttype === 'array' ? [] :\n\t\t\t\t\ttype === 'object' ? {} :\n\t\t\t\t\ttype === 'function' ? function(){} :\n\t\t\t\t\ttype === 'null' ? null :\n\t\t\t\t\tundefined\n\n\t\t\t\t// Check if type is a valid (either included in defaultTypes or a function constructor)\n\t\t\t\tif ( defaultTypes.indexOf(type) < 0 && typeof type !== 'function' ) {\n\t\t\t\t\tthrow new Error('Invalid type for an interface property.')\n\t\t\t\t}\n\n\t\t\t\tpropertyObject.name = key\n\t\t\t\tpropertyObject.type = type\n\t\t\t\tpropertyObject.default = defaultValue\n\t\t\t\tpropertyObject.testOnObject = function (object){\n\n\t\t\t\t\t\tvar testReport = { success : true }\n\t\t\t\t\t\t\n\t\t\t\t\t\tif ( !(propertyObject.name in object) ) {\n\t\t\t\t\t\t\ttestReport.success = false\n\t\t\t\t\t\t\ttestReport.errorType = 'ReferenceError'\n\t\t\t\t\t\t\ttestReport.errorMessage = 'Property \"'+propertyObject.name+'\" is not a member.'\n\t\t\t\t\t\t\treturn testReport\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Test property type from default types\n\t\t\t\t\t\tif ( defaultTypes.indexOf(propertyObject.type) > -1 ) {\n\n\t\t\t\t\t\t\tif ( \n\t\t\t\t\t\t\t\t(propertyObject.type === 'null' && object[propertyObject.name] !== null) ||\n\t\t\t\t\t\t\t\t(propertyObject.type === 'array' && !Array.isArray(object[propertyObject.name])) ||\n\t\t\t\t\t\t\t\t(!propertyObject.type.match(/^(null|array)$/) && typeof object[propertyObject.name] !== propertyObject.type )\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\ttestReport.success = false\n\t\t\t\t\t\t\t\ttestReport.errorType = 'TypeError'\n\t\t\t\t\t\t\t\ttestReport.errorMessage = 'Property \"'+propertyObject.name+'\" has wrong type.'\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Test agains an Interface type\n\t\t\t\t\t\t} else if ( propertyObject.type instanceof Interface  ) {\n\t\t\t\t\t\t\tvar report = propertyObject.type.testPropertiesOf(object[propertyObject.name])\n\t\t\t\t\t\t\tif ( !report.isImplemented ) {\n\t\t\t\t\t\t\t\ttestReport.success = false\n\t\t\t\t\t\t\t\ttestReport.errorType = 'TypeError'\n\t\t\t\t\t\t\t\ttestReport.errorMessage = 'Property \"'+propertyObject.name+'\" must implement ' + propertyObject.type.name + ' interface'\n\t\t\t\t\t\t\t\treport.errors.forEach(function(error){\n\t\t\t\t\t\t\t\t\tconsole.error(error.message)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Test property type as an instance of the given type\n\t\t\t\t\t\t} else if ( !(object[propertyObject.name] instanceof propertyObject.type) ) {\n\t\t\t\t\t\t\ttestReport.success = false\n\t\t\t\t\t\t\ttestReport.errorType = 'TypeError'\n\t\t\t\t\t\t\ttestReport.errorMessage = 'Property \"'+propertyObject.name+'\" has wrong type.'\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn testReport\n\t\t\t\t\t}\n\n\t\t\t\treturn propertyObject\n\n\t\t\t}.bind(this)()))\n\t\t}\n\n\t}\n\n\n\t// Interface Prototype properties\n\tObject.defineProperties(Interface.prototype, {\n\n\t\t/**\n\t\t * Attaches interface properties on a constructor prototype\n\t\t * @param {function} constructor - Object|Function|Class\n\t\t * @return {function} the constructor with implemented interface\n\t\t*/\n\t\timplementOn : {\n\t\t\tvalue : function (constructor) {\n\n\t\t\t\tif ( typeof constructor !== 'function' &&  typeof constructor !== 'object' ) {\n\t\t\t\t\tthrow new TypeError('Interface must only be implemented on an object, class, or function constructor')\n\t\t\t\t}\n\n\t\t\t\tvar object = (typeof constructor === 'function') ? constructor.prototype : constructor\n\n\t\t\t\tthis.properties.forEach(function(property){\n\t\t\t\t\tobject[property.name] = property.default\n\t\t\t\t})\n\t\t\t\treturn constructor\n\t\t\t}\n\t\t},\n\n\n\t\t/* Tests whether a given object implements this interface */\n\t\tisImplementedBy : {\n\t\t\tvalue : function (objectOrConstrutor) {\n\n\t\t\t\tvar object = (typeof objectOrConstrutor === 'function') ? objectOrConstrutor.prototype : objectOrConstrutor\n\n\t\t\t\tif ( typeof object !== 'object' ) {\n\t\t\t\t\tthrow new TypeError('Cannot test interface implementation against a non-object or non-constructor type.')\n\t\t\t\t}\n\n\t\t\t\t// Test each interface property against each object property\n\t\t\t\treturn this.properties.every(function(property){\n\t\t\t\t\t\tvar propTestReport = property.testOnObject(object)\n\t\t\t\t\t\tif ( !propTestReport.success ) return false\n\t\t\t\t\t\treturn true\n\t\t\t\t}.bind(this))\n\n\t\t\t}\n\t\t},\n\n\n\t\ttestAndThrow : {\n\t\t\tvalue : function( object, errorMessage, errorType ) {\n\t\t\t\tif ( !this.isImplementedBy(object) ) {\n\t\t\t\t\tvar type = errorType || Error\n\t\t\t\t\tthrow new type(errorMessage || 'Tested object does not implement ' + this.name + ' interface.')\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\n\t\t/**\n\t\t * Performs reflection on the Interface testing each property against an object\n\t\t * @param {object} object - The object to which this interface is tested against\n\t\t * @return {object} - A report about the test. Contains errors if there are any\n\t\t*/\n\t\ttestAndGetReport : {\n\t\t\tvalue : function (object) {\n\t\t\t\t\n\t\t\t\tif ( typeof object !== 'object' ) {\n\t\t\t\t\tthrow new TypeError('Cannot test interface properties against a non-object.')\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar report = {\n\t\t\t\t\tisImplemented : true,\n\t\t\t\t\terrors : [],\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// If this interface is not implemented, generate a message for each property with error\n\t\t\t\tthis.properties.forEach(function( property ){\n\t\t\t\t\tvar testReport = property.testOnObject(object)\n\t\t\t\t\tif ( !testReport.success ) {\n\t\t\t\t\t\treport.isImplemented  = false\n\t\t\t\t\t\treport.errors.push({\n\t\t\t\t\t\t\tproperty : property.name,\n\t\t\t\t\t\t\tmessage : testReport.errorMessage\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}.bind(this))\n\n\t\t\t\treturn report\n\n\t\t\t}\n\t\t}\n\n\t})\n\n\n\t// static methods\n\tObject.defineProperties(Interface, {\n\n\t\t/* Tests whether an object implements an Interface instance */\n\t\timplements : {\n\t\t\tvalue : function (object, interfaceInstance) {\n\t\t\t\t\n\t\t\t\t// Check second argument\n\t\t\t\tif ( typeof object !== 'object' ) {\n\t\t\t\t\tthrow new TypeError('First argument must be an object')\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Check first argument\n\t\t\t\tif ( !(interfaceInstance instanceof Interface) ) {\n\t\t\t\t\tthrow new TypeError('Second argument must be an Interface type.')\n\t\t\t\t}\n\n\t\t\t\t// Test implementation\n\t\t\t\treturn interfaceInstance.isImplementedBy(object)\n\n\t\t\t}\n\t\t}\n\t})\n\n\n\t// Allow to be used in node and browser\n\tif ( typeof module !== 'undefined' ) {\n\t\tmodule.exports = Interface\n\t} else {\n\t\twindow.Interface = Interface\n\t}\n\n\n})()","class TestClass {\n\tconstructor (name) {\n\t\tthis.name = name\n\t}\n}"]}