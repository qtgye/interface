'use strict';var _typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&'function'==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?'symbol':typeof a};(function(){var a=function(b,c){var d=['string','boolean','number','array','object','function','null','undefined'];if('string'!=typeof b)throw new TypeError('Interface instance requires a name');if('object'!==('undefined'==typeof c?'undefined':_typeof(c)))throw new TypeError('Interface instance requires a set of object properties');for(var e in Object.defineProperties(this,{name:{value:b},properties:{value:[]}}),c)this.properties.push(function(){var f={},g=c[e],h=Array.isArray(g)?g[0]:g,i=Array.isArray(g)?g[1]:'boolean'===h||('string'===h?'':'number'===h?0:'array'===h?[]:'object'===h?{}:'function'===h?function(){}:'null'===h?null:void 0);if(0>d.indexOf(h)&&'function'!=typeof h)throw new Error('Invalid type for an interface property.');return f.name=e,f.type=h,f.default=i,f.testOnObject=function(j){var k={success:!0};if(!(f.name in j))return k.success=!1,k.errorType='ReferenceError',k.errorMessage='Property "'+f.name+'" is not a member.',k;if(-1<d.indexOf(f.type))('null'!==f.type||null===j[f.name])&&('array'!==f.type||Array.isArray(j[f.name]))&&(f.type.match(/^(null|array)$/)||_typeof(j[f.name])===f.type)||(k.success=!1,k.errorType='TypeError',k.errorMessage='Property "'+f.name+'" has wrong type.');else if(f.type instanceof a){var l=f.type.testPropertiesOf(j[f.name]);l.isImplemented||(k.success=!1,k.errorType='TypeError',k.errorMessage='Property "'+f.name+'" must implement '+f.type.name+' interface',l.errors.forEach(function(m){console.error(m.message)}))}else j[f.name]instanceof f.type||(k.success=!1,k.errorType='TypeError',k.errorMessage='Property "'+f.name+'" has wrong type.');return k},f}.bind(this)())};Object.defineProperties(a.prototype,{implementOn:{value:function value(b){if('function'!=typeof b&&'object'!==('undefined'==typeof b?'undefined':_typeof(b)))throw new TypeError('Interface must only be implemented on an object, class, or function constructor');var c='function'==typeof b?b.prototype:b;return this.properties.forEach(function(d){c[d.name]=d.default}),b}},isImplementedBy:{value:function value(b){var c='function'==typeof b?b.prototype:b;if('object'!==('undefined'==typeof c?'undefined':_typeof(c)))throw new TypeError('Cannot test interface implementation against a non-object or non-constructor type.');return this.properties.every(function(d){var e=d.testOnObject(c);return!!e.success}.bind(this))}},testAndThrow:{value:function value(b,c,d){if(!this.isImplementedBy(b)){var e=d||Error;throw new e(c||'Tested object does not implement '+this.name+' interface.')}}},testAndGetReport:{value:function value(b){if('object'!==('undefined'==typeof b?'undefined':_typeof(b)))throw new TypeError('Cannot test interface properties against a non-object.');var c={isImplemented:!0,errors:[]};return this.properties.forEach(function(d){var e=d.testOnObject(b);e.success||(c.isImplemented=!1,c.errors.push({property:d.name,message:e.errorMessage}))}.bind(this)),c}}}),Object.defineProperties(a,{implements:{value:function value(b,c){if('object'!==('undefined'==typeof b?'undefined':_typeof(b)))throw new TypeError('First argument must be an object');if(!(c instanceof a))throw new TypeError('Second argument must be an Interface type.');return c.isImplementedBy(b)}}}),'undefined'==typeof module?window.Interface=a:module.exports=a})();
"use strict";function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var TestClass=function a(b){_classCallCheck(this,a),this.name=b};
//# sourceMappingURL=interface.min.js.map
